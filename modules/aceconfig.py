'''
AceProxy default configuration script
DO NOT EDIT THIS FILE!
You can copy this file to localconfig.py and change only needed options.
'''
import logging, colorer
import platform
from acemessages import AceConst

# Loggin level for selected  modules
logging.getLogger("urllib3").setLevel(logging.WARNING)
logging.getLogger("chardet").setLevel(logging.WARNING)

class AceDefConfig(object):
    acespawn = False
    acecmd = "acestreamengine --client-console --live-buffer 25 --vod-buffer 10 --vod-drop-max-age 120"
    acekey = 'n51LvQoTlJzNGaFxseRK-uvnvX-sD4Vm5Axwmc4UcoD-jruxmKsuJaH0eVgE'
    acehost=aceAPIport=aceHTTPport=None
    acehostslist = [['127.0.0.1', 62062, 6878]]
    aceage = AceConst.AGE_18_24
    acesex = AceConst.SEX_MALE
    acestartuptimeout = 10
    aceconntimeout = 5
    aceresulttimeout = 5
    httphost='0.0.0.0'
    httpport = 8012
    aceproxyuser = ''
    firewall = False
    firewallblacklistmode = False
    firewallnetranges = (
        '127.0.0.1',
        '192.168.0.0/16',
        )
    maxconns = 10
    streamtype = 'http'
    transcode = False
    transcodecmd = dict()
    transcodecmd['default'] = 'ffmpeg -i - -c:a copy -c:v copy -f mpegts -'.split()
    transcode_audio = 0
    transcode_mp3 = 0
    transcode_ac3 = 0
    preferred_audio_language = 'rus'
    videoseekback = 0
    videotimeout = 30
    useacelive = True
    loglevel = logging.DEBUG
    logfmt = '%(filename)-20s [LINE:%(lineno)-4s]# %(levelname)-8s [%(asctime)s]  %(message)s'
    logdatefmt='%d.%m %H:%M:%S'
    logfile = None

    @staticmethod
    def isFakeRequest(path, params, headers):
        fakeuas = ('Mozilla/5.0 IMC plugin Macintosh', )

        useragent = headers.get('User-Agent')

        if not useragent:
            return False
        elif useragent in AceConfig.fakeuas:
            return True
        elif useragent == 'Lavf/55.33.100' and not 'Range' in headers:
            return True
        elif useragent == 'GStreamer souphttpsrc (compatible; LG NetCast.TV-2013) libsoup/2.34.2' and headers.get('icy-metadata') != '1':
            return True

    osplatform = platform.system()
    #: Python 3.x?
    is_py3 = (platform.python_version_tuple()[0] == '3')
    pass

try: from localconfig import AceLocalConfig as AceConfig
except: AceConfig = AceDefConfig

